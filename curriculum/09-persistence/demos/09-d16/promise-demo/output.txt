'USE STRICT';

LET ADD = (A, B) => {
  RETURN NEW PROMISE((RESOLVE, REJECT) => {
    IF(TYPEOF A === 'NUMBER' && TYPEOF B === 'NUMBER'){
      RESOLVE(A + B);
      RETURN;
    }
    REJECT(NEW ERROR('MUST PROVIDE NUMBER ARGUMENTS'))
  })
}

ADD(34, 2)
.THEN(RESULT => {
  CONSOLE.LOG('RESULT', RESULT)
  RETURN JSON.PARSE('{')   
})
.THEN(RESULT => {
  CONSOLE.LOG('RESULT', RESULT)
  RETURN ADD(3, 5)
})
.CATCH(ERR => {
  CONSOLE.LOG('ERR', ERR)
})
.THEN(RESULT => {
  THROW 'HELLO'
  CONSOLE.LOG('RESULT', RESULT)
})
.THEN(RESULT => {
  CONSOLE.LOG('RESULT', RESULT)
});
.CATCH(ERR => {
})








PROMISE.REJECT([1,2])
.THEN(RESULT => {
  RETURN [...RESULT, 45, 66, 77]
})
.THEN(NUMS => {
  CONSOLE.LOG('NUMS', NUMS)
  THROW 89
})
.THEN(NUMS => {
  CONSOLE.LOG(NUMS)
})
.CATCH(ERR => {
  CONSOLE.ERROR('ERR', ERR)
  RETURN ERR
})
.THEN(RESULT => {
  CONSOLE.LOG('RESULT', RESULT)
})










